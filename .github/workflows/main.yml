name: Build and Release EXE

on:
  push:
    tags:
      - '*'  # Uruchamia workflow na każdym nowym tagu

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Clean previous builds
        run: Remove-Item -Recurse -Force build, dist, __pycache__
        shell: pwsh

      - name: Build with PyInstaller
        run: pyinstaller --onefile --windowed script_to_csv.py

      - name: Show dist folder contents
        run: dir dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "Automatycznie wygenerowany release"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload EXE to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/script_to_csv.exe  # Sprawdź rzeczywistą nazwę pliku
          asset_name: script_to_csv.exe
          asset_content_type: application/octet-stream